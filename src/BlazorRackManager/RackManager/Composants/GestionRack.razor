@inject IRackViewModel ViewModel

<h3>Gestion des Racks</h3>

@if (ViewModel.IsLoaded)
{
	<div>
		<div class="padding-10">
			@if (!ViewModel.DialogIsOpenNewRack)
			{
				<RadzenButton Text="Nouveau Rack"
							  Icon="add_circle"
							  ButtonStyle="ButtonStyle.Secondary"
							  Click="ViewModel.OpenNewRack" />
			}
			else
			{
				<div class="col-xl-6">
					<EditForm OnValidSubmit="@ViewModel.OnValidSubmit"
							  Model="@ViewModel.NouveauRack">
						<RadzenCard>
							@* Super IMPORTANT !!! *@
							<DataAnnotationsValidator />

							<div class="margin-5px">
								<div>
									<ValidationMessage For="@(() => ViewModel.NouveauRack.Gisement)" />
								</div>
								<RadzenTextBox Placeholder="Gisement..."
											   @bind-Value="ViewModel.NouveauRack.Gisement"
											   Style="width 300px" />
							</div>

							<div class="margin-5px">
								<div>
									<ValidationMessage For="@(() => ViewModel.NouveauRack.Position)" />
								</div>
								<RadzenTextBox Placeholder="Position..."
											   @bind-Value="ViewModel.NouveauRack.Position"
											   Style="width 300px" />
							</div>
						</RadzenCard>

						<span class="margin-10px">
							<button type="submit" class="padding-5">Ajouter</button>

							<button type="reset"
									class="padding-5"
									@onclick="ViewModel.CloseNouveauRack">
								Terminer
							</button>
						</span>
					</EditForm>
				</div>
			}
		</div>
	</div>

	<div class="col-6">
		<RadzenGrid AllowFiltering="true"
					FilterCaseSensitivity="FilterCaseSensitivity.Default"
					AllowPaging="true"
					PageSize="30"
					AllowSorting="true"
					Data="@ViewModel.AllRacks"
					TItem="Rack"
					EmptyText="Aucun rack"
					@ref="ViewModel.RackGrid">
			<Columns>
				<RadzenGridColumn TItem="Rack"
								  Property="IdRack"
								  Title="ID Rack"
								  Width="100px" />

				<RadzenGridColumn TItem="Rack"
								  Property="Gisement"
								  Title="Gisement"
								  Width="150px"/>

				<RadzenGridColumn TItem="Rack"
								  Property="PosRack"
								  Title="Position" />
			</Columns>
		</RadzenGrid>

	</div>
}
else
{
	<div>Chargement en cours ...</div>
}

@code{

	protected override async Task OnInitializedAsync()
	{
		await ViewModel.LoadRacks();
	}
}