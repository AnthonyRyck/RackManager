@inject IUniteMesureViewModel ViewModel

<h3>Gestion des unités de mesure</h3>

@if (ViewModel.IsLoaded)
{
	<div>
		<div class="padding-10">
			@if (!ViewModel.CanOpenNewUnite)
			{
				<RadzenButton Text="Nouvelle"
							  Icon="add_circle"
							  ButtonStyle="ButtonStyle.Secondary"
							  Click="ViewModel.OpenNewUnite" />
			}
			else
			{
				<div class="col-xl-6">
					<EditForm OnValidSubmit="@ViewModel.OnValidSubmitMesure"
							  Model="@ViewModel.UniteMesure">
						<RadzenCard>

							<DataAnnotationsValidator />

							<div class="margin-5px">
								<div>
									<ValidationMessage For="@(() => ViewModel.UniteMesure.NomMesure)" />
								</div>
								<RadzenTextBox Placeholder="Nom de l'unité de mesure..."
											   @bind-Value="ViewModel.UniteMesure.NomMesure"
											   Style="width 200px" />

								<div>C'est pour définir l'unité de mesure pour une quantité.</div>
								<div><u>Par exemple</u> : m2, litre, unité, pièce,...</div>
							</div>
						</RadzenCard>

						<span class="margin-10px">
							<button type="submit" class="padding-5">Ajouter</button>

							<button type="reset"
									class="padding-5"
									@onclick="ViewModel.CloseNewMesure">
								Terminer
							</button>
						</span>
					</EditForm>
				</div>
			}
		</div>
	</div>

	<div class="col-6">
		<RadzenGrid AllowFiltering="true"
					FilterCaseSensitivity="FilterCaseSensitivity.Default"
					AllowPaging="true"
					PageSize="10"
					AllowSorting="true"
					Data="@ViewModel.AllMesures"
					TItem="UniteMesure"
					EmptyText="Aucune unité de mesure"
					@ref="ViewModel.UniteGrid">
			<Columns>
				<RadzenGridColumn TItem="UniteMesure"
								  Property="Unite"
								  Title="Unite"
								  Width="150px" />
			</Columns>
		</RadzenGrid>

	</div>



}
else
{
	<div>Chargement des informations...</div>
}


@code {
	protected override async Task OnInitializedAsync()
	{
		await ViewModel.LoadUnites();
	}
}
