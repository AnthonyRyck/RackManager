@page "/hangar"
@inject IHangarViewModel ViewModel

<h1>Hangar</h1>

@if (ViewModel.IsLoaded)
{
	<div>
		<div class="padding-10">
		@if (!ViewModel.DialogNouvelleEntre)
		{
			<RadzenButton Text="Nouvelle entrée"
						  Icon="add_circle"
						  ButtonStyle="ButtonStyle.Secondary"
						  Click="ViewModel.OpenNouvelleEntre" />
		}
		else
		{
		<div class="col-xl-3">
			<EditForm OnValidSubmit="@ViewModel.OnValidSubmit"
					  Model="@ViewModel.EntreHangarValidation">
				<RadzenCard>
					@* Super IMPORTANT !!! *@
					<DataAnnotationsValidator />

					@*Choisir un gisement*@
					<div class="margin-5px">
						<div>
							<ValidationMessage For="@(() => ViewModel.EntreHangarValidation.GisementRack)" />
						</div>
						<RadzenDropDown AllowClear="true"
										TValue="string"
										FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
										FilterOperator="StringFilterOperator.StartsWith"
										AllowFiltering="true"
										Data=@ViewModel.Racks
										TextProperty="GisementPos"
										ValueProperty="GisementPos"
										Placeholder="Choisir un Gisement"
										@bind-Value="ViewModel.EntreHangarValidation.GisementRack"
										SelectedItemChanged=@(args => ViewModel.OnSelectedRack(args)) />
					</div>

					@*Choix du client*@
					<div class="margin-5px">
						<div>
							<ValidationMessage For="@(() => ViewModel.EntreHangarValidation.IdCommande)" />
						</div>
						<RadzenNumeric ShowUpDown="false"
									   TValue="int?"
									   @bind-Value=@ViewModel.EntreHangarValidation.IdCommande
									   Placeholder="Numéro de commande"
									   Style="width 300px" />
					</div>

					<div class="margin-5px">
						<div>
							<ValidationMessage For="@(() => ViewModel.EntreHangarValidation.NomClient)" />
						</div>

						<RadzenDropDown AllowClear="true"
										TValue="string"
										FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
										FilterOperator="StringFilterOperator.StartsWith"
										AllowFiltering="true"
										Data=@ViewModel.AllClients
										TextProperty="NomClient"
										ValueProperty="NomClient"
										Placeholder="Choisir un client"
										@bind-Value="ViewModel.EntreHangarValidation.NomClient"
										SelectedItemChanged=@(args => ViewModel.OnSelectClient(args)) />
					</div>

					@*Date d'entrée*@
					<div class="margin-5px">
						<div>
							<ValidationMessage For="@(() => ViewModel.EntreHangarValidation.DateEntree)" />
						</div>
						<RadzenDatePicker @bind-Value=@ViewModel.EntreHangarValidation.DateEntree
										  DateFormat="d" />
					</div>
				</RadzenCard>


				<span class="margin-10px">
					<button type="submit" class="padding-5">Ajouter</button>

					<button type="reset"
							class="padding-5"
							@onclick="ViewModel.CloseEntre">
						Terminer
					</button>
				</span>
			</EditForm>
		</div>
		}
		</div>
	</div>

	<div>
		<RadzenGrid AllowFiltering="true"
					FilterCaseSensitivity="FilterCaseSensitivity.Default"
					AllowPaging="true"
					PageSize="30"
					AllowSorting="true"
					Data="@ViewModel.AllHangar"
					TItem="HangarView"
					EmptyText="Le hangar est vide"
					@ref="ViewModel.HangarGrid">
			<Columns>
				<RadzenGridColumn TItem="HangarView"
								  Property="NomClient"
								  Title="Client"
								  Width="150px" />

				<RadzenGridColumn TItem="HangarView"
								  Property="IdCommande"
								  Title="Num commande"
								  Width="150px" />

				<RadzenGridColumn TItem="HangarView"
								  Property="Gisement"
								  Title="Gisement"
								  Width="150px" />

				<RadzenGridColumn TItem="HangarView"
								  Property="PosRack"
								  Title="Position"
								  Sortable="false"
								  Filterable="false"
								  Width="80px" />

				<RadzenGridColumn TItem="HangarView"
								  Property="DateEntree"
								  Title="Date entrée"
								  Filterable="false"
								  Format="date-time"
								  Width="150px">
					<Template Context="hang">
						@String.Format("{0:d}", hang.DateEntree)
					</Template>
				</RadzenGridColumn>

				<RadzenGridColumn TItem="HangarView"
								  Property="DescriptionCmd"
								  Title="Description" />
			</Columns>
		</RadzenGrid>
	</div>
}
else
{
	<div>Chargement en cours ...</div>
}


@code {

}
