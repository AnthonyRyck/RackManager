@page "/hangar"
@inject IHangarViewModel ViewModel

@attribute [Authorize(Roles = "Admin, Manager, Member")]

<h1>Hangar</h1>

@if (ViewModel.IsLoaded)
{
	<div>
		<div class="padding-10">
			<RadzenButton Text="Nouvelle entrée"
						  Icon="add_circle"
						  ButtonStyle="ButtonStyle.Secondary"
						  Click="ViewModel.OpenNouvelleEntre" />

			<RadzenButton Text="Sortie"
						  Icon="all_out"
						  ButtonStyle="ButtonStyle.Secondary"
						  Click="ViewModel.OpenSortie" />

			<RadzenButton Text="Déplacer"
						  Icon="input"
						  ButtonStyle="ButtonStyle.Secondary"
						  Click="ViewModel.OpenTransfert" />

			<RadzenButton Text="Intervertir"
						  Icon="compare_arrows"
						  ButtonStyle="ButtonStyle.Secondary"
						  Click="ViewModel.OpenIntervertir" />


			@if (ViewModel.DisplayRenderFragment != null)
			{
				<div class="margin-5px">
					@ViewModel.DisplayRenderFragment
				</div>
			}
		</div>
	</div>

	<div>
		<RadzenGrid AllowFiltering="true"
					FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
					AllowPaging="true"
					PageSize="30"
					AllowSorting="true"
					Data="@ViewModel.AllHangar"
					TItem="HangarView"
					EmptyText="Le hangar est vide"
					@ref="ViewModel.HangarGrid">
			<Columns>
				<RadzenGridColumn TItem="HangarView"
								  Property="NomClient"
								  Title="Client"
								  Width="150px" />

				<RadzenGridColumn TItem="HangarView"
								  Property="IdCommande"
								  Title="Num commande"
								  Width="150px" />

				<RadzenGridColumn TItem="HangarView"
								  Property="Gisement"
								  Title="Gisement"
								  Width="150px" />

				<RadzenGridColumn TItem="HangarView"
								  Property="PosRack"
								  Title="Position"
								  Sortable="false"
								  Filterable="false"
								  Width="80px" />

				<RadzenGridColumn TItem="HangarView"
								  Property="DateEntree"
								  Title="Date entrée"
								  Filterable="false"
								  Format="date-time"
								  Width="150px">
					<Template Context="hang">
						@String.Format("{0:d}", hang.DateEntree)
					</Template>
				</RadzenGridColumn>

				<RadzenGridColumn TItem="HangarView"
								  Property="DescriptionCmd"
								  Title="Description" />
			</Columns>
		</RadzenGrid>
	</div>
}
else
{
	<div>Chargement en cours ...</div>
}


@code {
	protected override async Task OnInitializedAsync()
	{
		ViewModel.SetStateHasChanged(StateHasChanged);
		await ViewModel.LoadDatas();
	}
}
